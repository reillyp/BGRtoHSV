#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    Oct 29, 2019 08:57:25 AM CDT  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import BGR_to_HSV_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    BGR_to_HSV_support.set_Tk_var()
    top = Toplevel1 (root)
    BGR_to_HSV_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    BGR_to_HSV_support.set_Tk_var()
    top = Toplevel1 (w)
    BGR_to_HSV_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Arial} -size 12 -weight bold"
        font9 = "-family {Arial} -size 12"

        top.geometry("600x409+344+163")
        top.title("BGR to HSV Conversion Rev 2")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.ButtonDir = tk.Button(top)
        self.ButtonDir.place(relx=0.067, rely=0.269, height=30, width=198)
        self.ButtonDir.configure(activebackground="#d9d9d9")
        self.ButtonDir.configure(activeforeground="#000000")
        self.ButtonDir.configure(background="#d9d9d9")
        self.ButtonDir.configure(disabledforeground="#a3a3a3")
        self.ButtonDir.configure(font="-family {Arial} -size 12")
        self.ButtonDir.configure(foreground="#000000")
        self.ButtonDir.configure(highlightbackground="#d9d9d9")
        self.ButtonDir.configure(highlightcolor="black")
        self.ButtonDir.configure(pady="0")
        self.ButtonDir.configure(text='''Select Output Directory''')
        self.ButtonDir.bind('<ButtonRelease-1>',lambda e:BGR_to_HSV_support.btn_release(e))

        self.EntryBlue = tk.Entry(top)
        self.EntryBlue.place(relx=0.067, rely=0.587,height=22, relwidth=0.167)
        self.EntryBlue.configure(background="white")
        self.EntryBlue.configure(disabledforeground="#a3a3a3")
        self.EntryBlue.configure(font="-family {Arial} -size 12")
        self.EntryBlue.configure(foreground="#000000")
        self.EntryBlue.configure(highlightbackground="#d9d9d9")
        self.EntryBlue.configure(highlightcolor="black")
        self.EntryBlue.configure(insertbackground="black")
        self.EntryBlue.configure(selectbackground="#c4c4c4")
        self.EntryBlue.configure(selectforeground="black")
        self.EntryBlue.configure(textvariable=BGR_to_HSV_support.entry_blue)

        self.EntryGreen = tk.Entry(top)
        self.EntryGreen.place(relx=0.3, rely=0.587,height=22, relwidth=0.167)
        self.EntryGreen.configure(background="white")
        self.EntryGreen.configure(disabledforeground="#a3a3a3")
        self.EntryGreen.configure(font="-family {Arial} -size 12")
        self.EntryGreen.configure(foreground="#000000")
        self.EntryGreen.configure(highlightbackground="#d9d9d9")
        self.EntryGreen.configure(highlightcolor="black")
        self.EntryGreen.configure(insertbackground="black")
        self.EntryGreen.configure(selectbackground="#c4c4c4")
        self.EntryGreen.configure(selectforeground="black")
        self.EntryGreen.configure(textvariable=BGR_to_HSV_support.entry_green)

        self.EntryRed = tk.Entry(top)
        self.EntryRed.place(relx=0.533, rely=0.587,height=22, relwidth=0.167)
        self.EntryRed.configure(background="white")
        self.EntryRed.configure(disabledforeground="#a3a3a3")
        self.EntryRed.configure(font="-family {Arial} -size 12")
        self.EntryRed.configure(foreground="#000000")
        self.EntryRed.configure(highlightbackground="#d9d9d9")
        self.EntryRed.configure(highlightcolor="black")
        self.EntryRed.configure(insertbackground="black")
        self.EntryRed.configure(selectbackground="#c4c4c4")
        self.EntryRed.configure(selectforeground="black")
        self.EntryRed.configure(textvariable=BGR_to_HSV_support.entry_red)

        self.LabelBlue = tk.Label(top)
        self.LabelBlue.place(relx=0.067, rely=0.513, height=24, width=37)
        self.LabelBlue.configure(activebackground="#f9f9f9")
        self.LabelBlue.configure(activeforeground="black")
        self.LabelBlue.configure(background="#d9d9d9")
        self.LabelBlue.configure(disabledforeground="#a3a3a3")
        self.LabelBlue.configure(font="-family {Arial} -size 12")
        self.LabelBlue.configure(foreground="#000000")
        self.LabelBlue.configure(highlightbackground="#d9d9d9")
        self.LabelBlue.configure(highlightcolor="black")
        self.LabelBlue.configure(text='''Blue''')

        self.LabelGreen = tk.Label(top)
        self.LabelGreen.place(relx=0.3, rely=0.513, height=24, width=49)
        self.LabelGreen.configure(activebackground="#f9f9f9")
        self.LabelGreen.configure(activeforeground="black")
        self.LabelGreen.configure(background="#d9d9d9")
        self.LabelGreen.configure(disabledforeground="#a3a3a3")
        self.LabelGreen.configure(font="-family {Arial} -size 12")
        self.LabelGreen.configure(foreground="#000000")
        self.LabelGreen.configure(highlightbackground="#d9d9d9")
        self.LabelGreen.configure(highlightcolor="black")
        self.LabelGreen.configure(text='''Green''')

        self.LabelRed = tk.Label(top)
        self.LabelRed.place(relx=0.533, rely=0.513, height=24, width=35)
        self.LabelRed.configure(activebackground="#f9f9f9")
        self.LabelRed.configure(activeforeground="black")
        self.LabelRed.configure(background="#d9d9d9")
        self.LabelRed.configure(disabledforeground="#a3a3a3")
        self.LabelRed.configure(font="-family {Arial} -size 12")
        self.LabelRed.configure(foreground="#000000")
        self.LabelRed.configure(highlightbackground="#d9d9d9")
        self.LabelRed.configure(highlightcolor="black")
        self.LabelRed.configure(text='''Red''')

        self.LabelEntryInstr = tk.Label(top)
        self.LabelEntryInstr.place(relx=0.067, rely=0.44, height=24, width=203)
        self.LabelEntryInstr.configure(activebackground="#f9f9f9")
        self.LabelEntryInstr.configure(activeforeground="black")
        self.LabelEntryInstr.configure(background="#d9d9d9")
        self.LabelEntryInstr.configure(disabledforeground="#a3a3a3")
        self.LabelEntryInstr.configure(font="-family {Arial} -size 12")
        self.LabelEntryInstr.configure(foreground="#000000")
        self.LabelEntryInstr.configure(highlightbackground="#d9d9d9")
        self.LabelEntryInstr.configure(highlightcolor="black")
        self.LabelEntryInstr.configure(text='''Enter Integer Values  0 - 255''')

        self.ButtonConvert = tk.Button(top)
        self.ButtonConvert.place(relx=0.067, rely=0.685, height=30, width=128)
        self.ButtonConvert.configure(activebackground="#d9d9d9")
        self.ButtonConvert.configure(activeforeground="#000000")
        self.ButtonConvert.configure(background="#d9d9d9")
        self.ButtonConvert.configure(disabledforeground="#a3a3a3")
        self.ButtonConvert.configure(font="-family {Arial} -size 12")
        self.ButtonConvert.configure(foreground="#000000")
        self.ButtonConvert.configure(highlightbackground="#d9d9d9")
        self.ButtonConvert.configure(highlightcolor="black")
        self.ButtonConvert.configure(pady="0")
        self.ButtonConvert.configure(text='''Convert to HSV''')
        self.ButtonConvert.bind('<ButtonRelease-1>',lambda e:BGR_to_HSV_support.btn_convert_RGB_to_HSV(e))

        self.LabelResults = tk.Label(top)
        self.LabelResults.place(relx=0.067, rely=0.782, height=24, width=525)
        self.LabelResults.configure(activebackground="#f9f9f9")
        self.LabelResults.configure(activeforeground="black")
        self.LabelResults.configure(anchor='nw')
        self.LabelResults.configure(background="#d9d9d9")
        self.LabelResults.configure(disabledforeground="#a3a3a3")
        self.LabelResults.configure(font="-family {Arial} -size 12")
        self.LabelResults.configure(foreground="#000000")
        self.LabelResults.configure(highlightbackground="#d9d9d9")
        self.LabelResults.configure(highlightcolor="black")
        self.LabelResults.configure(text='''Results - Hue, Saturation, Value:''')

        self.LabelOutDir = tk.Label(top)
        self.LabelOutDir.place(relx=0.067, rely=0.367, height=24, width=525)
        self.LabelOutDir.configure(activebackground="#f9f9f9")
        self.LabelOutDir.configure(activeforeground="black")
        self.LabelOutDir.configure(anchor='nw')
        self.LabelOutDir.configure(background="#d9d9d9")
        self.LabelOutDir.configure(disabledforeground="#a3a3a3")
        self.LabelOutDir.configure(font="-family {Arial} -size 12")
        self.LabelOutDir.configure(foreground="#000000")
        self.LabelOutDir.configure(highlightbackground="#d9d9d9")
        self.LabelOutDir.configure(highlightcolor="black")
        self.LabelOutDir.configure(justify='left')
        self.LabelOutDir.configure(text='''Output Directory:''')

        self.LabelPaintNet = tk.Label(top)
        self.LabelPaintNet.place(relx=0.067, rely=0.856, height=24, width=524)
        self.LabelPaintNet.configure(activebackground="#f9f9f9")
        self.LabelPaintNet.configure(activeforeground="black")
        self.LabelPaintNet.configure(anchor='nw')
        self.LabelPaintNet.configure(background="#d9d9d9")
        self.LabelPaintNet.configure(disabledforeground="#a3a3a3")
        self.LabelPaintNet.configure(font="-family {Arial} -size 12")
        self.LabelPaintNet.configure(foreground="#000000")
        self.LabelPaintNet.configure(highlightbackground="#d9d9d9")
        self.LabelPaintNet.configure(highlightcolor="black")
        self.LabelPaintNet.configure(justify='left')
        self.LabelPaintNet.configure(text='''Paint.Net Approx. Hue, Sat, Value:''')

        self.LabelDesc1 = tk.Label(top)
        self.LabelDesc1.place(relx=0.067, rely=0.049, height=24, width=547)
        self.LabelDesc1.configure(activebackground="#f9f9f9")
        self.LabelDesc1.configure(activeforeground="black")
        self.LabelDesc1.configure(anchor='nw')
        self.LabelDesc1.configure(background="#d9d9d9")
        self.LabelDesc1.configure(disabledforeground="#a3a3a3")
        self.LabelDesc1.configure(font="-family {Arial} -size 12")
        self.LabelDesc1.configure(foreground="#000000")
        self.LabelDesc1.configure(highlightbackground="#d9d9d9")
        self.LabelDesc1.configure(highlightcolor="black")
        self.LabelDesc1.configure(justify='left')
        self.LabelDesc1.configure(text='''This program converts Blue, Green, Red values to Hue, Saturation and Value.''')

        self.LabelDesc2 = tk.Label(top)
        self.LabelDesc2.place(relx=0.067, rely=0.122, height=24, width=545)
        self.LabelDesc2.configure(activebackground="#f9f9f9")
        self.LabelDesc2.configure(activeforeground="black")
        self.LabelDesc2.configure(anchor='nw')
        self.LabelDesc2.configure(background="#d9d9d9")
        self.LabelDesc2.configure(disabledforeground="#a3a3a3")
        self.LabelDesc2.configure(font="-family {Arial} -size 12")
        self.LabelDesc2.configure(foreground="#000000")
        self.LabelDesc2.configure(highlightbackground="#d9d9d9")
        self.LabelDesc2.configure(highlightcolor="black")
        self.LabelDesc2.configure(justify='left')
        self.LabelDesc2.configure(text='''The results are presented on this interface and logged to "BGR_to_HSV.csv"''')

        self.Label3 = tk.Label(top)
        self.Label3.place(relx=0.067, rely=0.196, height=24, width=223)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='nw')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Arial} -size 12")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(justify='left')
        self.Label3.configure(text='''in the user specified directory.''')

        self.menubar = tk.Menu(top,font=('Arial',12,),bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.menubar.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=BGR_to_HSV_support.open_instruct,
                font=('Arial',12,'bold'),
                foreground="#000000",
                label="Detailed Instructions")
        self.menubar.add_command(
                activebackground="#ececec",
                activeforeground="#000000",
                background="#d9d9d9",
                command=BGR_to_HSV_support.exit,
                font=('Arial',12,'bold'),
                foreground="#000000",
                label="Exit")

    @staticmethod
    def popup3(event, *args, **kwargs):
        Popupmenu3 = tk.Menu(root, tearoff=0)
        Popupmenu3.configure(activebackground="#f9f9f9")
        Popupmenu3.configure(activeborderwidth="1")
        Popupmenu3.configure(activeforeground="black")
        Popupmenu3.configure(background="#d9d9d9")
        Popupmenu3.configure(borderwidth="1")
        Popupmenu3.configure(disabledforeground="#a3a3a3")
        Popupmenu3.configure(font="-family {Segoe UI} -size 9")
        Popupmenu3.configure(foreground="black")
        Popupmenu3.post(event.x_root, event.y_root)

if __name__ == '__main__':
    vp_start_gui()





